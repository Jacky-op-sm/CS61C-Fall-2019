1.While you’re in a gdb session, how do you set the arguments that will be passed to the program when it’s run?
(lldb) run <args>
(lldb) r <args>

2.How do you create a breakpoint?
b main(function name)

3.How do you execute the next line of C code in the program after stopping at a breakpoint?
next
(lldb) thread step-inst-over
(lldb) ni

4.If the next line of code is a function call, you’ll execute the whole function call at once if you use your answer to #3. (If not, consider a different command for #3!) How do you tell GDB that you want to debug the code inside the function (i.e. step into the function) instead? (If you changed your answer to #3, then that answer is most likely now applicable here.)
(lldb) thread step-inst
(lldb) si

5.How do you continue the program after stopping at a breakpoint?
Thread continue


6.How can you print the value of a variable (or even an expression like 1+2) in gdb?
Expression printf("%d\n", v);


7.How do you configure gdb so it displays the value of a variable after every step?
(lldb) display argc
(lldb) display argv



8.How do you show a list of all variables and their values in the current function?
(lldb) frame variable
(lldb) fr v


9.How do you quit out of gdb?
exit

10.How do you use .txt file to replace stdIn in C when debugging?
(lldb) process launch -i <file>
(While the run is same as process lunch -X true <args>)
(More to see at help process launch / run)